-- Database: resource

-- DROP DATABASE IF EXISTS resource;

CREATE DATABASE resource
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LC_COLLATE = 'English_United States.1252'
    LC_CTYPE = 'English_United States.1252'
    TABLESPACE = pg_default
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;


DROP TABLE _user;

CREATE TABLE _user (
	_id SERIAL PRIMARY KEY,
	_first_name VARCHAR(255) NOT NULL,
	_last_name VARCHAR(255),
	_phone VARCHAR(20),
	_email VARCHAR(50),
	_status VARCHAR(50),
	_department VARCHAR(50),
	_position VARCHAR(50),
	_hired_date DATE,
	_out_date DATE
);

CREATE TABLE _dayoff (
	
);

-- Late, OT
CREATE TABLE _timekeeping (
	
);

CREATE TABLE _payroll (
	_salary
);


DROP TABLE _user;
DROP TABLE _topic;
DROP TABLE _keyword;
DROP TABLE _post;
DROP TABLE _comment;
DROP TABLE _follow;


CREATE TABLE _user (
	user_id SERIAL PRIMARY KEY,
	username VARCHAR(255)
);

CREATE TABLE _topic (
	topic_id SERIAL PRIMARY KEY,
	topic_name VARCHAR(255)
);

CREATE TABLE _keyword (
	keyword_id SERIAL PRIMARY KEY,
	keyword_content VARCHAR(255)
);

CREATE TABLE _post (
	post_id SERIAL PRIMARY KEY,
	topic_id INT NOT NULL,
	user_id INT NOT NULL,
	post_date DATE,
	modified_date DATE,
	title VARCHAR(255),
	post_content VARCHAR(255),
	topic_id REFERENCES _topic(topic_id),
	user_id REFERENCES _user(user_id)
);

CREATE TABLE _commment (
	comment_id SERIAL PRIMARY KEY,
	post_id INT NOT NULL,
	user_id INT NOT NULL,
	comment_level INT NOT NULL,
	comment_content VARCHAR(255),
	comment_date DATE,
	post_id REFERENCES _post(post_id),
	user_id REFERENCES _user(user_id)
);

CREATE TABLE _follow (
	follow_id SERIAL PRIMARY KEY, -- maybe removed
	post_id INT NOT NULL,
	user_id INT NOT NULL
);


UP, 17/07/23
Content: cập nhật khóa ngoại postgresql
CREATE TABLE _user (
	user_id SERIAL PRIMARY KEY,
	username VARCHAR(255)
);

CREATE TABLE _topic (
	topic_id SERIAL PRIMARY KEY,
	topic_name VARCHAR(255)
);

CREATE TABLE _keyword (
	keyword_id SERIAL PRIMARY KEY,
	keyword_content VARCHAR(255)
);

CREATE TABLE _post (
	post_id SERIAL PRIMARY KEY,
	topic_id INT NOT NULL,
	user_id INT NOT NULL,
	post_date DATE,
	modified_date DATE,
	title VARCHAR(255),
	post_content VARCHAR(255),
	FOREIGN KEY  (topic_id) REFERENCES _topic(topic_id),
	FOREIGN KEY (user_id) REFERENCES _user(user_id)
);

CREATE TABLE _commment (
	comment_id SERIAL PRIMARY KEY,
	post_id INT NOT NULL,
	user_id INT NOT NULL,
	comment_level INT NOT NULL,
	comment_content VARCHAR(255),
	comment_date DATE,
	comment_parent_id INT NOT NULL,
	FOREIGN KEY (post_id) REFERENCES _post(post_id),
	FOREIGN KEY (user_id) REFERENCES _user(user_id)
);

CREATE TABLE _follow (
	follow_id SERIAL PRIMARY KEY, -- maybe removed
	post_id INT NOT NULL,
	user_id INT NOT NULL,
	FOREIGN KEY (post_id) REFERENCES _post(post_id),
	FOREIGN KEY (user_id) REFERENCES _user(user_id)
);